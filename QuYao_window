import javax.swing.JPanel;
import java.awt.Color;
import java.awt.Frame;
import javax.swing.JDialog;
import javax.swing.JLabel;
import java.awt.Rectangle;
import java.awt.Font;
import java.awt.event.MouseEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JButton;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

public class quyao_window extends JDialog {

	private static final long serialVersionUID = 1L;

	private JPanel jContentPane = null;

	private JLabel jLabel = null;

	private JLabel jLabel1 = null;

	private JLabel jQno = null;

	private JLabel jLabel3 = null;

	private JLabel jcno = null;

	private JLabel jLabel2 = null;

	private JTextField jpatientName = null;

	private JLabel jLabel4 = null;

	private JLabel jLabel5 = null;

	private JScrollPane jScrollPane = null;

	private JScrollPane jScrollPane1 = null;

	private JTable jpatientInfo = null;

	private JTable jChufang_Info = null;

	private JButton jButton = null;

	private JButton jButton1 = null;
	
	private DefaultTableModel tablemodel_J;
	
	private DefaultTableModel tablemodel_Q;
	
	private JMenuItem Item = new JMenuItem("刷新");

	/**
	 * @param owner
	 */
	public quyao_window(Frame owner) {
		super(owner);
		initialize();
	}

	/**
	 * This method initializes this
	 * 
	 * @return void
	 */
	private void initialize() {
		Item.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent e) {
				setPatientInfo();
			}
		});
		this.setSize(671, 461);
		this.setResizable(false);
		this.setTitle("取药处");
		this.setContentPane(getJContentPane());
		this.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowOpened(java.awt.event.WindowEvent e) {
				setPatientInfo();
			}
		});
	}

	/**
	 * This method initializes jContentPane
	 * 
	 * @return javax.swing.JPanel
	 */
	private JPanel getJContentPane() {
		if (jContentPane == null) {
			jLabel5 = new JLabel();
			jLabel5.setBounds(new Rectangle(301, 158, 70, 23));
			jLabel5.setText("清单情况：");
			jLabel4 = new JLabel();
			jLabel4.setBounds(new Rectangle(19, 159, 68, 24));
			jLabel4.setText("交费情况：");
			jLabel2 = new JLabel();
			jLabel2.setBounds(new Rectangle(504, 122, 42, 24));
			jLabel2.setText("姓名：");
			jcno = new JLabel();
			jcno.setBounds(new Rectangle(382, 123, 120, 23));
			jcno.setText("编号");
			jcno.setForeground(Color.red);
			jLabel3 = new JLabel();
			jLabel3.setBounds(new Rectangle(302, 122, 81, 24));
			jLabel3.setText("处方单编号：");
			jQno = new JLabel();
			jQno.setBounds(new Rectangle(89, 121, 136, 26));
			jQno.setText(dialog.getuserName());
			jQno.setForeground(Color.red);
			jLabel1 = new JLabel();
			jLabel1.setBounds(new Rectangle(31, 121, 56, 25));
			jLabel1.setText("工作号：");
			jLabel = new JLabel();
			jLabel.setBounds(new Rectangle(197, 27, 254, 57));
			jLabel.setFont(new Font("Dialog", Font.BOLD, 36));
			jLabel.setText("病   人   取   药");
			jLabel.setForeground(Color.red);
			jContentPane = new JPanel();
			jContentPane.setLayout(null);
			jContentPane.setBackground(new Color(60, 251, 230));
			jContentPane.add(jLabel, null);
			jContentPane.add(jLabel1, null);
			jContentPane.add(jQno, null);
			jContentPane.add(jLabel3, null);
			jContentPane.add(jcno, null);
			jContentPane.add(jLabel2, null);
			jContentPane.add(getJpatientName(), null);
			jContentPane.add(jLabel4, null);
			jContentPane.add(jLabel5, null);
			jContentPane.add(getJScrollPane(), null);
			jContentPane.add(getJScrollPane1(), null);
			jContentPane.add(getJButton(), null);
			jContentPane.add(getJButton1(), null);
		}
		return jContentPane;
	}

	/**
	 * This method initializes jpatientName	
	 * 	
	 * @return javax.swing.JTextField	
	 */
	private JTextField getJpatientName() {
		if (jpatientName == null) {
			jpatientName = new JTextField();
			jpatientName.setBounds(new Rectangle(548, 123, 106, 22));
		}
		return jpatientName;
	}

	/**
	 * This method initializes jScrollPane	
	 * 	
	 * @return javax.swing.JScrollPane	
	 */
	private JScrollPane getJScrollPane() {
		if (jScrollPane == null) {
			jScrollPane = new JScrollPane();
			jScrollPane.setBounds(new Rectangle(16, 185, 253, 173));
			jScrollPane.setViewportView(getJpatientInfo());
			jScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
				public void mouseClicked(java.awt.event.MouseEvent e) {
					if(e.getButton() == MouseEvent.BUTTON3){
						getPopupMenu().show(e.getComponent(),e.getX(),e.getY());
					}
				}
			});
		}
		return jScrollPane;
	}

	/**
	 * This method initializes jScrollPane1	
	 * 	
	 * @return javax.swing.JScrollPane	
	 */
private JScrollPane getJScrollPane1() {
		if (jScrollPane1 == null) {
			jScrollPane1 = new JScrollPane();
			jScrollPane1.setBounds(new Rectangle(301, 182, 353, 177));
			jScrollPane1.setViewportView(getJChufang_Info());
		}
		return jScrollPane1;
	}

	/**
	 * This method initializes jpatientInfo	
	 * 	
	 * @return javax.swing.JTable	
	 */
	private JTable getJpatientInfo() {
		if (jpatientInfo == null) {
			jpatientInfo = new JTable();
			tablemodel_J = new DefaultTableModel();
			tablemodel_J.addColumn("处方单编号");
			tablemodel_J.addColumn("病历号");
			jpatientInfo.setModel(tablemodel_J);
			jpatientInfo.setSelectionBackground(Color.green);
			jpatientInfo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
			jpatientInfo.addMouseListener(new java.awt.event.MouseAdapter() {
				public void mouseClicked(java.awt.event.MouseEvent e) {
					if(e.getButton() == MouseEvent.BUTTON1){
						//获取对应病历号的患者姓名
						int row = jpatientInfo.getSelectedRow();
						jcno.setText(String.valueOf(tablemodel_J.getValueAt(row, 0)).trim());
						String sql = "select 姓名 from 病人信息表 where 病历号 = '"+tablemodel_J.getValueAt(row, 1)+"'";
						linkDataBase link = new linkDataBase(main_Frame.getdataName(3),main_Frame.getdataPassword(3));
						ResultSet rs = link.getResultSet(sql);
						try{
							if(rs.next()){
								jpatientName.setText(rs.getString(1).trim());
							}
						}catch(SQLException e3){
							System.out.println("获取患者姓名失败："+e3.toString());
						}
						setQingDan_Info(jcno.getText().trim());
					}else if(e.getButton() == MouseEvent.BUTTON3){
						getPopupMenu().show(e.getComponent(),e.getX(),e.getY());
					}
				}
			});
		}
		return jpatientInfo;
	}

	/**
	 * This method initializes jChufang_Info	
	 * 	
	 * @return javax.swing.JTable	
	 */
	private JTable getJChufang_Info() {
		if (jChufang_Info == null) {
			jChufang_Info = new JTable();
			tablemodel_Q = new DefaultTableModel();
			tablemodel_Q.addColumn("药品编号");
			tablemodel_Q.addColumn("药品名称");
			tablemodel_Q.addColumn("药品数量");
			jChufang_Info.setModel(tablemodel_Q);
			jChufang_Info.setSelectionBackground(Color.green);
		}
		return jChufang_Info;
	}

	/**
	 * This method initializes jButton	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getJButton() {
		if (jButton == null) {
			jButton = new JButton();
			jButton.setBounds(new Rectangle(110, 376, 84, 28));
			jButton.setFont(new Font("Dialog", Font.BOLD, 14));
			jButton.setText("取药");
			jButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					updateJZhen_Info();
					tablemodel_J.removeRow(jpatientInfo.getSelectedRow());
					tablemodel_Q.setRowCount(0);
				}
			});
		}
		return jButton;
	}

	/**
	 * This method initializes jButton1	
	 * 	
	 * @return javax.swing.JButton	
	 */
	private JButton getJButton1() {
		if (jButton1 == null) {
			jButton1 = new JButton();
			jButton1.setBounds(new Rectangle(460, 376, 90, 30));
			jButton1.setFont(new Font("Dialog", Font.BOLD, 14));
			jButton1.setText("退出");
			jButton1.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					dispose();
				}
			});
		}
		return jButton1;
	}
	
	//获取病人已经交费但没有取药的情况
	private void setPatientInfo(){
		String sql = "select 处方单编号, 病历号 from 就诊信息表 where 取药员号 is Null and 收费员号 is not Null"	;
		linkDataBase link = new linkDataBase(main_Frame.getdataName(3),main_Frame.getdataPassword(3));
		tablemodel_J.setRowCount(0);
		try{
			PreparedStatement pstmt = link.getconnection().prepareStatement(sql);
			ResultSet rs = pstmt.executeQuery();
			while(rs.next()){
				Vector<String> vc = new Vector<String>();
				vc.add(rs.getString(1).trim());
				vc.add(rs.getString(2));
				tablemodel_J.addRow(vc);
			}
		}catch(SQLException e){
			System.out.println("获取信息失败！"+e.toString());
		}
	}
	
	
	//获取对应处方单编号的清单信息
	private void setQingDan_Info(String cno){
		linkDataBase link = new linkDataBase(main_Frame.getdataName(3),main_Frame.getdataPassword(3));
		Connection conn = link.getconnection();
		tablemodel_Q.setRowCount(0);
		try{
			CallableStatement cstmt = conn.prepareCall("{call cList_info(?)}");
			cstmt.setString(1, cno);
			ResultSet rs = cstmt.executeQuery();
			while(rs.next()){
				Vector<String> vc = new Vector<String>();
				vc.add(rs.getString(1).trim());
				vc.add(rs.getString(2).trim());
				vc.add(rs.getString(3).trim());
				tablemodel_Q.addRow(vc);
			}
			rs.close();
			cstmt.close();
			conn.close();
			}catch(SQLException e){
				System.out.println(e.toString());
				System.out.println("调用存储过程失败！");
			}
		}
	
	//弹出式刷新菜单
	private JPopupMenu getPopupMenu(){
		JPopupMenu popmenu = new JPopupMenu();
		popmenu.add(Item);
		return popmenu;
	}
	
//	更新就诊信息表，加入取药员编号
	private void updateJZhen_Info(){
		String sql = "update 就诊信息表 set 取药员号 = (?) where 处方单编号 = (?)";
		linkDataBase link = new linkDataBase(main_Frame.getdataName(3),main_Frame.getdataPassword(3));
		Connection conn = link.getconnection();
		try{
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, jQno.getText().trim());
			pstmt.setString(2, jcno.getText().trim());
			pstmt.executeUpdate();
			JOptionPane.showMessageDialog(null,"完成取药！","提示！",JOptionPane.INFORMATION_MESSAGE);
			pstmt.close();
			conn.close();
		}catch(SQLException e){
			JOptionPane.showMessageDialog(null,"交款失败，请重新交款！","提示！",JOptionPane.INFORMATION_MESSAGE);
			System.out.println("更新就诊信息表失败:"+e.toString());
		}
	}
}  
